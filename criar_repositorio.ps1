# UFIT Sales Agent - Script de Cria√ß√£o Autom√°tica do Reposit√≥rio GitHub
# Execute este script no PowerShell

Write-Host "üöÄ UFIT Sales Agent - Cria√ß√£o Autom√°tica do Reposit√≥rio GitHub" -ForegroundColor Green
Write-Host "=" * 60 -ForegroundColor Cyan

# Verificar se estamos no diret√≥rio correto
if (-not (Test-Path "main.py")) {
    Write-Host "‚ùå Execute este script na pasta do projeto UFIT Sales Agent!" -ForegroundColor Red
    exit 1
}

# Verificar configura√ß√£o do Git
Write-Host "üîç Verificando configura√ß√£o do Git..." -ForegroundColor Yellow

$gitName = git config user.name
$gitEmail = git config user.email

if (-not $gitName) {
    $nome = Read-Host "Digite seu nome para o Git"
    git config --global user.name $nome
    Write-Host "‚úÖ User.name configurado!" -ForegroundColor Green
}

if (-not $gitEmail) {
    $email = Read-Host "Digite seu email para o Git"
    git config --global user.email $email
    Write-Host "‚úÖ User.email configurado!" -ForegroundColor Green
}

# Obter username do GitHub
$username = Read-Host "Digite seu username do GitHub"
if (-not $username) {
    Write-Host "‚ùå Username √© obrigat√≥rio!" -ForegroundColor Red
    exit 1
}

$repoUrl = "https://github.com/$username/ufit-sales-agent.git"

Write-Host "`nüéØ Reposit√≥rio ser√° criado em: $repoUrl" -ForegroundColor Cyan
Write-Host "`nüìã INSTRU√á√ïES:" -ForegroundColor Yellow
Write-Host "1. Acesse: https://github.com/new" -ForegroundColor White
Write-Host "2. Nome do reposit√≥rio: ufit-sales-agent" -ForegroundColor White
Write-Host "3. Descri√ß√£o: Agente de vendas inteligente para UFIT com sistema de aprova√ß√£o autom√°tica" -ForegroundColor White
Write-Host "4. Marque como P√∫blico" -ForegroundColor White
Write-Host "5. N√ÉO marque 'Initialize with README'" -ForegroundColor White
Write-Host "6. Clique em 'Create repository'" -ForegroundColor White

Read-Host "`n‚è≥ Pressione ENTER quando tiver criado o reposit√≥rio no GitHub"

# Executar comandos
Write-Host "`nüîÑ Executando comandos..." -ForegroundColor Yellow

Write-Host "üîÑ Conectando com reposit√≥rio GitHub..." -ForegroundColor Yellow
git remote add origin $repoUrl
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Conectado com sucesso!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro ao conectar. Verifique se o reposit√≥rio foi criado." -ForegroundColor Red
    exit 1
}

Write-Host "üîÑ Renomeando branch para main..." -ForegroundColor Yellow
git branch -M main
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Branch renomeada!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro ao renomear branch." -ForegroundColor Red
}

Write-Host "üîÑ Fazendo push dos arquivos..." -ForegroundColor Yellow
git push -u origin main
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Push realizado com sucesso!" -ForegroundColor Green
    Write-Host "`nüéâ SUCESSO! Reposit√≥rio criado e configurado!" -ForegroundColor Green
    Write-Host "üîó Acesse: https://github.com/$username/ufit-sales-agent" -ForegroundColor Cyan
    Write-Host "`nüìÅ Seus arquivos est√£o agora no GitHub!" -ForegroundColor Green
} else {
    Write-Host "‚ùå Erro ao fazer push. Tente executar manualmente:" -ForegroundColor Red
    Write-Host "   git push -u origin main" -ForegroundColor White
}

Write-Host "`nPressione qualquer tecla para sair..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
